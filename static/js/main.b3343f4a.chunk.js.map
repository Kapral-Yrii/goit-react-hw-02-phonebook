{"version":3,"sources":["components/ContactForm/ContactForm.module.css","App.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","newContact","id","uuid","checkSameContact","props","contactList","find","toLowerCase","alert","addNewContact","resetForm","onSubmit","this","className","s","form","label","input","onChange","type","pattern","title","required","button","Component","ContactListItem","contacts","deleteContact","map","item","onClick","ContactList","list","Filter","filterContactByName","App","filter","prev","dataset","filterContacts","includes","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3343f4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1sjDp\",\"label\":\"ContactForm_label__2JjGw ContactForm_form__1sjDp\",\"input\":\"ContactForm_input__3RQGW\",\"button\":\"ContactForm_button__2lcJG ContactForm_input__3RQGW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3mWuc\",\"title\":\"App_title__35tfG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__23_K7\",\"button\":\"ContactListItem_button__2Jf9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1HMfY\",\"input\":\"Filter_input__gU4h2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1NuZf\"};","import PropTypes from 'prop-types'\r\nimport { Component } from 'react'\r\nimport { v4 as uuid } from 'uuid'\r\nimport s from './ContactForm.module.css'\r\n\r\nexport class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const contactId = uuid()\r\n    const newContact = {\r\n      id: contactId,\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    }\r\n    const checkSameContact = this.props.contactList.find(e => e.name.toLowerCase() === newContact.name.toLowerCase())\r\n    if (!checkSameContact) {\r\n      this.props.addNewContact(newContact)\r\n    } else {\r\n      alert(`${checkSameContact.name} is already in contacts`)\r\n    }\r\n    \r\n    this.resetForm()\r\n  }\r\n\r\n  resetForm = () => {\r\n    this.setState({name: '', number: ''})\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            onChange={this.handleChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>Add contact</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contactList: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\r\n  addNewContact: PropTypes.func\r\n}","import PropTypes from 'prop-types'\r\nimport { v4 as uuid } from 'uuid'\r\nimport s from './ContactListItem.module.css'\r\n\r\nexport function ContactListItem({ contacts, deleteContact }) {\r\n    return (\r\n        <>\r\n            {contacts.map(e => {\r\n                return (\r\n                    <li className={s.item} key={uuid()}>{e.name}: {e.number}<button className={s.button} onClick={deleteContact} data-id={e.id}>X</button></li>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\r\n    deleteContact: PropTypes.func\r\n}","import PropTypes from 'prop-types'\r\nimport { ContactListItem } from '../ContactListItem/ContactListItem'\r\nimport s from './ContactList.module.css'\r\n\r\nexport function ContactList({contacts, deleteContact}) {\r\n    return (\r\n        <ul className={s.list}>\r\n           <ContactListItem contacts={contacts} deleteContact={deleteContact}/> \r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\r\n    deleteContact: PropTypes.func\r\n}","import PropTypes from 'prop-types'\r\nimport s from './Filter.module.css'\r\n\r\nexport function Filter({filterContactByName}) {\r\n    return (\r\n        <>\r\n            <label className={s.label}>\r\n                Find contact by name\r\n                <input className={s.input} type=\"text\" onChange={filterContactByName}/>\r\n            </label>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    filterContactByName: PropTypes.func\r\n}\r\n","import s from './App.module.css';\nimport { Component } from 'react'\nimport { ContactForm } from './components/ContactForm/ContactForm'\nimport { ContactList } from './components/ContactList/ContactList'\nimport { Filter } from './components/Filter/Filter'\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: ''\n  }\n  \n  addNewContact = (newContact) => {\n    this.setState((prev) => {\n      return ({\n        contacts: [...prev.contacts, newContact]\n      })\n    })\n  }\n  deleteContact = (e) => {\n    const id = e.target.dataset.id\n    this.setState((prev) => {\n      return ({\n        contacts: prev.contacts.filter(e => e.id !== id)\n      })\n    })\n  }\n  filterContactByName = (e) => {\n    this.setState({ filter: e.target.value.toLowerCase()})\n  }\n\n  render() {\n    const filterContacts = this.state.contacts.filter(e => e.name.toLowerCase().includes(this.state.filter))\n\n    return (\n      <div className={s.app}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm addNewContact={this.addNewContact} contactList={this.state.contacts}/>\n        <h2 className={s.title}>Contacts</h2>\n        <Filter filterContactByName={this.filterContactByName}/>\n        <ContactList contacts={filterContacts} deleteContact={this.deleteContact}/>\n      </div>)\n  }   \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}